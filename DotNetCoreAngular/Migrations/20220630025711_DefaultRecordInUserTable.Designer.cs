// <auto-generated />
using System;
using DotNetCoreAngular.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetCoreAngular.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220630025711_DefaultRecordInUserTable")]
    partial class DefaultRecordInUserTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DotNetCoreAngular.Models.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Gender")
                        .HasColumnType("smallint");

                    b.Property<string>("Interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("LookingFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 6, 30, 8, 27, 11, 33, DateTimeKind.Local).AddTicks(7547),
                            DateOfBirth = new DateTime(2022, 6, 30, 8, 27, 11, 33, DateTimeKind.Local).AddTicks(7601),
                            Email = "vikaskdalal@gmail.com",
                            LastActive = new DateTime(2022, 6, 30, 8, 27, 11, 33, DateTimeKind.Local).AddTicks(7539),
                            Name = "Vikas",
                            PasswordHash = new byte[] { 175, 190, 41, 87, 11, 236, 251, 74, 239, 54, 70, 239, 182, 10, 252, 223, 71, 203, 78, 191, 55, 79, 203, 233, 16, 38, 156, 148, 134, 0, 57, 7, 225, 84, 194, 202, 90, 12, 139, 148, 38, 216, 237, 129, 55, 19, 37, 146, 129, 110, 207, 4, 245, 89, 42, 197, 174, 50, 99, 160, 118, 158, 5, 204 },
                            PasswordSalt = new byte[] { 162, 7, 113, 170, 132, 79, 224, 245, 101, 102, 207, 91, 39, 157, 232, 251, 64, 198, 59, 183, 20, 100, 206, 137, 132, 98, 31, 19, 134, 97, 159, 149, 187, 72, 203, 16, 198, 239, 194, 192, 150, 177, 80, 20, 164, 26, 30, 112, 82, 116, 102, 5, 0, 48, 12, 251, 151, 225, 255, 126, 110, 6, 5, 103, 144, 152, 198, 51, 165, 100, 113, 234, 162, 36, 162, 17, 155, 230, 102, 98, 129, 107, 243, 105, 1, 45, 129, 245, 37, 249, 99, 20, 138, 108, 102, 159, 175, 102, 229, 160, 177, 121, 225, 22, 45, 138, 54, 78, 92, 251, 214, 108, 8, 142, 75, 68, 44, 36, 132, 186, 138, 148, 9, 104, 251, 8, 119, 27 },
                            Username = "m+dhmpjucooq5clmqiqsfg=="
                        });
                });

            modelBuilder.Entity("DotNetCoreAngular.Models.Entity.UserLike", b =>
                {
                    b.Property<int>("SourceUserId")
                        .HasColumnType("int");

                    b.Property<int>("LikedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.HasKey("SourceUserId", "LikedUserId");

                    b.HasIndex("LikedUserId");

                    b.ToTable("UserLikes", "User");
                });

            modelBuilder.Entity("DotNetCoreAngular.Models.Entity.UserLike", b =>
                {
                    b.HasOne("DotNetCoreAngular.Models.Entity.User", "LikedUser")
                        .WithMany("LikedByUsers")
                        .HasForeignKey("LikedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DotNetCoreAngular.Models.Entity.User", "SourceUser")
                        .WithMany("LikedUsers")
                        .HasForeignKey("SourceUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LikedUser");

                    b.Navigation("SourceUser");
                });

            modelBuilder.Entity("DotNetCoreAngular.Models.Entity.User", b =>
                {
                    b.Navigation("LikedByUsers");

                    b.Navigation("LikedUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
